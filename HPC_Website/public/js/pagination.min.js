! function(n) {
    jQuery.fn.rPage = function() {
        for (var e = n(this), i = 0, t = e.length; i < t; i++) new s(n(e[i]));

        function s(a) {
            var e;
            this.label = function() {
                var e = this.els.filter(".active").index(),
                    i = this;
                this.els.each(function() {
                    0 == i.isNextOrPrevLink(n(this)) ? n(this).addClass("page-away-" + Math.abs(e - n(this).index()).toString()) : n(this).index() > e ? n(this).addClass("right-etc") : n(this).addClass("left-etc")
                })
            }, this.makeResponsive = function() {
                this.reset();
                for (var e = this.calculateWidth(); e > this.els.parent().parent().width() - 10;) {
                    if (0 == this.removeOne()) break;
                    e = this.calculateWidth()
                }
            }, this.isNextOrPrevLink = function(e) {
                return e.hasClass("pagination-prev") || e.hasClass("pagination-next") || "»" == e.text() || "«" == e.text()
            }, this.isRemovable = function(e) {
                if (this.isNextOrPrevLink(e)) return !1;
                var i = this.els.filter(e).index();
                return 1 != i && !this.isNextOrPrevLink(a.find("li").eq(i + 1)) && "..." != e.text()
            }, this.removeOne = function() {
                for (var e = this.els.filter(".active").index(), i = a.find("li").length - 1, t = i - 1; 0 < t; t--) {
                    var s = this.els.filter(".page-away-" + t.toString()).filter(function() {
                        return "none" != this.style.display
                    });
                    if (0 < s.length)
                        for (var n = 0; n < s.length; n++) {
                            var r = s.eq(n);
                            if (this.isRemovable(r)) return r.css("display", "none"), this.needsEtcSign(e, i - 1) && this.els.eq(i - 2).before("<li class='page-item disabled removable'><a class='page-link' href='#'>...</a></li>"), this.needsEtcSign(1, e) && this.els.eq(1).after("<li class='page-item disabled removable'><a class='page-link' href='#'>...</a></li>"), !0
                        }
                }
                return !1
            }, this.needsEtcSign = function(e, i) {
                if (i - e <= 1) return !1;
                for (var t = !1, s = !1, n = e + 1; n < i; n++) {
                    var r = a.find("li").eq(n);
                    "none" == r.css("display") && (s = !0), "..." == r.text() && (t = !0)
                }
                return 1 == s && 0 == t
            }, this.reset = function() {
                for (var e = 0; e < this.els.length; e++) this.els.eq(e).css("display", "inline");
                a.find("li").filter(".removable").remove()
            }, this.calculateWidth = function() {
                for (var e = 0, i = 0; i < a.find("li").length; i++) "none" != a.find("li").eq(i).css("display") && (0 < a.find("li").eq(i).children("a").eq(0).length && (e += a.find("li").eq(i).children("a").eq(0).outerWidth()), 0 < a.find("li").eq(i).children("span").eq(0).length && (e += a.find("li").eq(i).children("span").eq(0).outerWidth()));
                return e
            }, this.els = a.find("li"), this.label(), this.makeResponsive(), n(window).resize(n.proxy(function() {
                clearTimeout(e), e = setTimeout(n.proxy(function() {
                    this.makeResponsive()
                }, this), 100)
            }, this))
        }
    }
}(jQuery);
